rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Admin access function
    function isAdmin() {
      return request.auth != null && (
        request.auth.token.email == 'specifysai@gmail.com' ||
        request.auth.token.email == 'admin@specifys.ai' ||
        request.auth.token.email == 'shalom@specifys.ai'
      );
    }
    
    // Rules for specs collection
    match /specs/{document} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid;
    }
    
    // Rules for marketResearch collection
    match /marketResearch/{document} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid;
    }
    
    // Rules for apps collection
    match /apps/{document} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid;
    }
    
    // Rules for users collection - allow admin to read all
    match /users/{document} {
      allow read: if request.auth != null && 
        (request.auth.uid == document || isAdmin());
      allow write: if request.auth != null && request.auth.uid == document;
    }
    
    // Rules for userTools collection (saved tools)
    match /userTools/{userId}/savedTools/{toolId} {
      allow read, write: if request.auth != null 
        && userId == request.auth.uid;
      allow create: if request.auth != null 
        && userId == request.auth.uid;
    }
    
    // Rules for userLikes collection
    match /userLikes/{document} {
      allow read, write: if request.auth != null 
        && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid;
    }
    
    // Rules for appTasks collection
    match /appTasks/{document} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid;
    }
    
    // Rules for appMilestones collection
    match /appMilestones/{document} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid;
    }
    
    // Rules for appNotes collection
    match /appNotes/{document} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid;
    }
    
    // Rules for appExpenses collection
    match /appExpenses/{document} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null 
        && request.resource.data.userId == request.auth.uid;
    }
  }
}
