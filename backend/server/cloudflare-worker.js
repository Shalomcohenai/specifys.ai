/**
 * Cloudflare Worker for handling feedback from Specifys.ai
 * This worker can send emails and forward data to Google Sheets
 */

addEventListener('fetch', event => {
  event.respondWith(handleRequest(event.request))
})

async function handleRequest(request) {
  // Handle CORS preflight requests
  if (request.method === 'OPTIONS') {
    return new Response(null, {
      status: 200,
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'POST, OPTIONS',
        'Access-Control-Allow-Headers': 'Content-Type',
        'Access-Control-Max-Age': '86400',
      }
    })
  }

  // Only allow POST requests
  if (request.method !== 'POST') {
    return new Response('Method not allowed', { status: 405 })
  }

  try {
    // Parse the request body
    const data = await request.json()
    
    // Validate required fields
    if (!data.feedback) {
      return new Response(JSON.stringify({
        success: false,
        error: 'Feedback text is required'
      }), {
        status: 400,
        headers: {
          'Content-Type': 'application/json',
          'Access-Control-Allow-Origin': '*'
        }
      })
    }

    // Process the feedback
    const result = await processFeedback(data)
    
    return new Response(JSON.stringify(result), {
      status: 200,
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*'
      }
    })
    
  } catch (error) {
    console.error('Error processing request:', error)
    
    return new Response(JSON.stringify({
      success: false,
      error: 'Internal server error'
    }), {
      status: 500,
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*'
      }
    })
  }
}

async function processFeedback(data) {
  const { email, feedback, type } = data
  const timestamp = new Date().toISOString()
  
  try {
    // 1. Send email notification (if configured)
    if (FEEDBACK_EMAIL) {
      await sendEmail(email, feedback, type, timestamp)
    }
    
    // 2. Forward to Google Sheets (if configured)
    if (GOOGLE_SHEETS_WEBHOOK_URL) {
      await forwardToGoogleSheets(email, feedback, type, timestamp)
    }
    
    // 3. Log the feedback
    console.log('Feedback processed successfully:', {
      email: email || 'Not provided',
      feedback: feedback.substring(0, 100) + '...',
      type: type || 'general',
      timestamp: timestamp
    })
    
    return {
      success: true,
      message: 'Feedback submitted successfully',
      timestamp: timestamp
    }
    
  } catch (error) {
    console.error('Error processing feedback:', error)
    throw error
  }
}

async function sendEmail(userEmail, feedback, type, timestamp) {
  // This would use Cloudflare Email Workers API
  // For now, we'll just log it
  
  const emailData = {
    from: 'noreply@specifys.ai',
    to: FEEDBACK_EMAIL,
    subject: 'New Feedback from Specifys.ai',
    html: `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #0078d4;">üìù New Feedback Received</h2>
        <div style="background: #f5f5f5; padding: 20px; border-radius: 8px; margin: 20px 0;">
          <p><strong>üìß User Email:</strong> ${userEmail || 'Not provided'}</p>
          <p><strong>üïí Time:</strong> ${new Date(timestamp).toLocaleString('he-IL', { timeZone: 'Asia/Jerusalem' })}</p>
          <p><strong>üì± Source:</strong> Specifys.ai Try Page</p>
          <p><strong>üè∑Ô∏è Type:</strong> ${type || 'general'}</p>
        </div>
        <div style="background: #fff; padding: 20px; border-left: 4px solid #0078d4; margin: 20px 0;">
          <h3 style="color: #333; margin-top: 0;">Feedback Content:</h3>
          <p style="color: #555; line-height: 1.6; white-space: pre-wrap;">${feedback}</p>
        </div>
        <hr style="border: none; border-top: 1px solid #eee; margin: 20px 0;">
        <p style="color: #666; font-size: 12px;">This email was automatically generated by the Specifys.ai feedback system.</p>
      </div>
    `
  }
  
  console.log('üìß Email would be sent:', emailData)
  
  // TODO: Implement actual email sending using Cloudflare Email Workers
  // Example:
  // await fetch('https://api.mailchannels.net/tx/v1/send', {
  //   method: 'POST',
  //   headers: { 'content-type': 'application/json' },
  //   body: JSON.stringify(emailData)
  // })
}

async function forwardToGoogleSheets(userEmail, feedback, type, timestamp) {
  try {
    const sheetsData = {
      email: userEmail || 'Not provided',
      feedback: feedback,
      type: type || 'general',
      timestamp: timestamp,
      source: 'specifys-ai-try-page'
    }
    
    const response = await fetch(GOOGLE_SHEETS_WEBHOOK_URL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(sheetsData)
    })
    
    if (!response.ok) {
      throw new Error(`Google Sheets API error: ${response.status}`)
    }
    
    console.log('‚úÖ Feedback forwarded to Google Sheets')
    
  } catch (error) {
    console.error('‚ùå Error forwarding to Google Sheets:', error.message)
    // Don't fail the entire request if Sheets fails
  }
}

// Environment variables (set these in Cloudflare Workers dashboard)
const FEEDBACK_EMAIL = 'feedback@specifys.ai' // Set this in your worker environment
const GOOGLE_SHEETS_WEBHOOK_URL = 'https://script.google.com/macros/s/YOUR_SCRIPT_ID/exec' // Set this in your worker environment
